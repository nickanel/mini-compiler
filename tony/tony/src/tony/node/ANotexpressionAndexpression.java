/* This file was generated by SableCC (http://www.sablecc.org/). */

package tony.node;

import java.util.*;
import tony.analysis.*;

public final class ANotexpressionAndexpression extends PAndexpression
{
    private PNotexpression _notexpression_;

    public ANotexpressionAndexpression()
    {
    }

    public ANotexpressionAndexpression(
        PNotexpression _notexpression_)
    {
        setNotexpression(_notexpression_);

    }
    public Object clone()
    {
        return new ANotexpressionAndexpression(
            (PNotexpression) cloneNode(_notexpression_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotexpressionAndexpression(this);
    }

    public PNotexpression getNotexpression()
    {
        return _notexpression_;
    }

    public void setNotexpression(PNotexpression node)
    {
        if(_notexpression_ != null)
        {
            _notexpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _notexpression_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_notexpression_);
    }

    void removeChild(Node child)
    {
        if(_notexpression_ == child)
        {
            _notexpression_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_notexpression_ == oldChild)
        {
            setNotexpression((PNotexpression) newChild);
            return;
        }

    }
}
