/* This file was generated by SableCC (http://www.sablecc.org/). */

package tony.node;

import java.util.*;
import tony.analysis.*;

public final class ANilquestSomething extends PSomething
{
    private TNilquestionmark _nilquestionmark_;
    private TLPar _lPar_;
    private PExpr _expr_;
    private TRPar _rPar_;

    public ANilquestSomething()
    {
    }

    public ANilquestSomething(
        TNilquestionmark _nilquestionmark_,
        TLPar _lPar_,
        PExpr _expr_,
        TRPar _rPar_)
    {
        setNilquestionmark(_nilquestionmark_);

        setLPar(_lPar_);

        setExpr(_expr_);

        setRPar(_rPar_);

    }
    public Object clone()
    {
        return new ANilquestSomething(
            (TNilquestionmark) cloneNode(_nilquestionmark_),
            (TLPar) cloneNode(_lPar_),
            (PExpr) cloneNode(_expr_),
            (TRPar) cloneNode(_rPar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANilquestSomething(this);
    }

    public TNilquestionmark getNilquestionmark()
    {
        return _nilquestionmark_;
    }

    public void setNilquestionmark(TNilquestionmark node)
    {
        if(_nilquestionmark_ != null)
        {
            _nilquestionmark_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _nilquestionmark_ = node;
    }

    public TLPar getLPar()
    {
        return _lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(_lPar_ != null)
        {
            _lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lPar_ = node;
    }

    public PExpr getExpr()
    {
        return _expr_;
    }

    public void setExpr(PExpr node)
    {
        if(_expr_ != null)
        {
            _expr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expr_ = node;
    }

    public TRPar getRPar()
    {
        return _rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(_rPar_ != null)
        {
            _rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rPar_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_nilquestionmark_)
            + toString(_lPar_)
            + toString(_expr_)
            + toString(_rPar_);
    }

    void removeChild(Node child)
    {
        if(_nilquestionmark_ == child)
        {
            _nilquestionmark_ = null;
            return;
        }

        if(_lPar_ == child)
        {
            _lPar_ = null;
            return;
        }

        if(_expr_ == child)
        {
            _expr_ = null;
            return;
        }

        if(_rPar_ == child)
        {
            _rPar_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_nilquestionmark_ == oldChild)
        {
            setNilquestionmark((TNilquestionmark) newChild);
            return;
        }

        if(_lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(_expr_ == oldChild)
        {
            setExpr((PExpr) newChild);
            return;
        }

        if(_rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

    }
}
