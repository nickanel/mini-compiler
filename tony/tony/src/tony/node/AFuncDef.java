/* This file was generated by SableCC (http://www.sablecc.org/). */

package tony.node;

import java.util.*;
import tony.analysis.*;

public final class AFuncDef extends PFuncDef
{
    private TDef _def_;
    private PHeader _header_;
    private TColon _colon_;
    private final LinkedList _function_ = new TypedLinkedList(new Function_Cast());
    private final LinkedList _stmt_ = new TypedLinkedList(new Stmt_Cast());
    private TEnd _end_;

    public AFuncDef()
    {
    }

    public AFuncDef(
        TDef _def_,
        PHeader _header_,
        TColon _colon_,
        List _function_,
        List _stmt_,
        TEnd _end_)
    {
        setDef(_def_);

        setHeader(_header_);

        setColon(_colon_);

        {
            this._function_.clear();
            this._function_.addAll(_function_);
        }

        {
            this._stmt_.clear();
            this._stmt_.addAll(_stmt_);
        }

        setEnd(_end_);

    }
    public Object clone()
    {
        return new AFuncDef(
            (TDef) cloneNode(_def_),
            (PHeader) cloneNode(_header_),
            (TColon) cloneNode(_colon_),
            cloneList(_function_),
            cloneList(_stmt_),
            (TEnd) cloneNode(_end_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFuncDef(this);
    }

    public TDef getDef()
    {
        return _def_;
    }

    public void setDef(TDef node)
    {
        if(_def_ != null)
        {
            _def_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _def_ = node;
    }

    public PHeader getHeader()
    {
        return _header_;
    }

    public void setHeader(PHeader node)
    {
        if(_header_ != null)
        {
            _header_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _header_ = node;
    }

    public TColon getColon()
    {
        return _colon_;
    }

    public void setColon(TColon node)
    {
        if(_colon_ != null)
        {
            _colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _colon_ = node;
    }

    public LinkedList getFunction()
    {
        return _function_;
    }

    public void setFunction(List list)
    {
        _function_.clear();
        _function_.addAll(list);
    }

    public LinkedList getStmt()
    {
        return _stmt_;
    }

    public void setStmt(List list)
    {
        _stmt_.clear();
        _stmt_.addAll(list);
    }

    public TEnd getEnd()
    {
        return _end_;
    }

    public void setEnd(TEnd node)
    {
        if(_end_ != null)
        {
            _end_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _end_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_def_)
            + toString(_header_)
            + toString(_colon_)
            + toString(_function_)
            + toString(_stmt_)
            + toString(_end_);
    }

    void removeChild(Node child)
    {
        if(_def_ == child)
        {
            _def_ = null;
            return;
        }

        if(_header_ == child)
        {
            _header_ = null;
            return;
        }

        if(_colon_ == child)
        {
            _colon_ = null;
            return;
        }

        if(_function_.remove(child))
        {
            return;
        }

        if(_stmt_.remove(child))
        {
            return;
        }

        if(_end_ == child)
        {
            _end_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_def_ == oldChild)
        {
            setDef((TDef) newChild);
            return;
        }

        if(_header_ == oldChild)
        {
            setHeader((PHeader) newChild);
            return;
        }

        if(_colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        for(ListIterator i = _function_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator i = _stmt_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(_end_ == oldChild)
        {
            setEnd((TEnd) newChild);
            return;
        }

    }

    private class Function_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PFunction node = (PFunction) o;

            if((node.parent() != null) &&
                (node.parent() != AFuncDef.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AFuncDef.this))
            {
                node.parent(AFuncDef.this);
            }

            return node;
        }
    }

    private class Stmt_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PStmt node = (PStmt) o;

            if((node.parent() != null) &&
                (node.parent() != AFuncDef.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AFuncDef.this))
            {
                node.parent(AFuncDef.this);
            }

            return node;
        }
    }
}
