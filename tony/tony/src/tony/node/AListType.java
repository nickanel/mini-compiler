/* This file was generated by SableCC (http://www.sablecc.org/). */

package tony.node;

import java.util.*;
import tony.analysis.*;

public final class AListType extends PType
{
    private TList _list_;
    private TLBr _lBr_;
    private PType _type_;
    private TRBr _rBr_;

    public AListType()
    {
    }

    public AListType(
        TList _list_,
        TLBr _lBr_,
        PType _type_,
        TRBr _rBr_)
    {
        setList(_list_);

        setLBr(_lBr_);

        setType(_type_);

        setRBr(_rBr_);

    }
    public Object clone()
    {
        return new AListType(
            (TList) cloneNode(_list_),
            (TLBr) cloneNode(_lBr_),
            (PType) cloneNode(_type_),
            (TRBr) cloneNode(_rBr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListType(this);
    }

    public TList getList()
    {
        return _list_;
    }

    public void setList(TList node)
    {
        if(_list_ != null)
        {
            _list_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _list_ = node;
    }

    public TLBr getLBr()
    {
        return _lBr_;
    }

    public void setLBr(TLBr node)
    {
        if(_lBr_ != null)
        {
            _lBr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBr_ = node;
    }

    public PType getType()
    {
        return _type_;
    }

    public void setType(PType node)
    {
        if(_type_ != null)
        {
            _type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _type_ = node;
    }

    public TRBr getRBr()
    {
        return _rBr_;
    }

    public void setRBr(TRBr node)
    {
        if(_rBr_ != null)
        {
            _rBr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBr_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_list_)
            + toString(_lBr_)
            + toString(_type_)
            + toString(_rBr_);
    }

    void removeChild(Node child)
    {
        if(_list_ == child)
        {
            _list_ = null;
            return;
        }

        if(_lBr_ == child)
        {
            _lBr_ = null;
            return;
        }

        if(_type_ == child)
        {
            _type_ = null;
            return;
        }

        if(_rBr_ == child)
        {
            _rBr_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_list_ == oldChild)
        {
            setList((TList) newChild);
            return;
        }

        if(_lBr_ == oldChild)
        {
            setLBr((TLBr) newChild);
            return;
        }

        if(_type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(_rBr_ == oldChild)
        {
            setRBr((TRBr) newChild);
            return;
        }

    }
}
